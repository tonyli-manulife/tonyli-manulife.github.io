name: Test # ACTION的名字在GITHUB页面上显示
run-name: Test Action # 运行的ACTION的名字
on: 
  workflow_dispatch: # 在github actions页面手动出发
  push: 
    branches:
      - develop # push到develop分支触发
# on: [push] # 触发action的事件
# github.ref 当前分支名
# inputs: # 输入文件的集合
#   file-path: 
#     description: "the input file" # 输入文件的描述
#     required: false # 文件是否必要
#     default: 'default.js' # 默认文件
# outputs: # 输出文件
#   results-file: 
#     description: "the output file" # 输出文件描述
jobs: # ACTION执行作业的集合
  job-one:
    name: task 1 #作业的名字 
    runs-on: ubuntu-latest #作业运行的平台
    steps: #作业运行的步骤
      - uses: actions/checkout@v3  #每当工作流程将针对存储库的代码运行时，都应使用签出操作。 
      - uses: actions/setup-node@v3 #设置NODE的版本
        with: #关联的信息
          node-version: '14' #设定node的版本
      - run: npm install -g bats #使用npm安装bats包
      - run: bats -v #查看bats的版本
  job-two:
    name: task 2
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/test-action #引入其他actions
      # -uses: {owner}/{repo}@{ref} #引入其他仓库的actions
  job-three:
    name: task 3
    runs-on: ubuntu-latest #作业运行的平台
    steps: #作业运行的步骤
      - uses: actions/checkout@v3  #每当工作流程将针对存储库的代码运行时，都应使用签出操作。 
      - uses: actions/setup-node@v3 #设置NODE的版本
        with: #关联的信息
          node-version: '14' #设定node的版本
      - name: run js file
        run: node ./test.js #node执行js文件
        env: # 执行的环境变量
          HOST: 'LOCALHOST'
          PORT: 3000
  job-four:
    name: task 4
    runs-on: ubuntu-latest
    steps:
      - name: 'Dump github context'
        id: github_context_step
        run: echo '${{ toJSON(github) }}' # 查看github的context
      - name: Dump job context
        run: echo ' ${{toJSON(job)}} ' # 查看job的context
      - name: Dump step context
        run: echo ' ${{toJSON(steps)}} ' # 查看steps的context
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'  # 查看runner的context
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}' # 查看strategy的context
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}' # 查看matrix的context
